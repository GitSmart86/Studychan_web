# Generated by Django 3.0.7 on 2020-07-25 01:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('content_phylums', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='note',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_note', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='note',
            name='phylum_tags',
            field=models.ManyToManyField(blank=True, related_name='notes_phylum_tags', through='content_phylums.Junct_PhylumTag_Note', to='content_phylums.Phylum_Tag'),
        ),
        migrations.AddField(
            model_name='note',
            name='ratings',
            field=models.ManyToManyField(blank=True, related_name='note_ratings', through='content_phylums.Junct_Rate_Note', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='note',
            name='subscribers',
            field=models.ManyToManyField(blank=True, related_name='note_subscriptions', through='content_phylums.Junct_Sub_Note', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_sub_note',
            name='subbedNote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subbedNote', to='content_phylums.Note'),
        ),
        migrations.AddField(
            model_name='junct_sub_note',
            name='subbingUser_Note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subbingUser_Note', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_sub_groupdeck',
            name='subbedGroupdeck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subbedGroupdeck', to='content_phylums.Groupdeck'),
        ),
        migrations.AddField(
            model_name='junct_sub_groupdeck',
            name='subbingUser_Groupdeck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subbingUser_Groupdeck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_sub_deck',
            name='subbedDeck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subbedDeck', to='content_phylums.Deck'),
        ),
        migrations.AddField(
            model_name='junct_sub_deck',
            name='subbingUser_Deck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subbingUser_Deck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_snd_note',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note_snd', to='content_phylums.Note'),
        ),
        migrations.AddField(
            model_name='junct_rev_note',
            name='reviewedNote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewedNote', to='content_phylums.Note'),
        ),
        migrations.AddField(
            model_name='junct_rev_note',
            name='reviewingUser_Note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewingUser_Note', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_rev_groupdeck',
            name='reviewedGroupdeck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewedGroupdeck', to='content_phylums.Groupdeck'),
        ),
        migrations.AddField(
            model_name='junct_rev_groupdeck',
            name='reviewingUser_Groupdeck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewingUser_Groupdeck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_rev_deck',
            name='reviewedDeck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewedDeck', to='content_phylums.Deck'),
        ),
        migrations.AddField(
            model_name='junct_rev_deck',
            name='reviewingUser_Deck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewingUser_Deck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_rate_note',
            name='ratedNote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratedNote', to='content_phylums.Note'),
        ),
        migrations.AddField(
            model_name='junct_rate_note',
            name='ratingUser_Note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratingUser_Note', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_rate_groupdeck',
            name='ratedGroupdeck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratedGroupdeck', to='content_phylums.Groupdeck'),
        ),
        migrations.AddField(
            model_name='junct_rate_groupdeck',
            name='ratingUser_Groupdeck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratingUser_Groupdeck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_rate_format',
            name='ratedFormat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratedFormat', to='content_phylums.Format'),
        ),
        migrations.AddField(
            model_name='junct_rate_format',
            name='ratingUser_Format',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratingUser_Format', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_rate_deck',
            name='ratedDeck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratedDeck', to='content_phylums.Deck'),
        ),
        migrations.AddField(
            model_name='junct_rate_deck',
            name='ratingUser_Deck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratingUser_Deck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_rate_ccpick',
            name='ratedCcpick',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratedCcpick', to='content_phylums.Ccpick'),
        ),
        migrations.AddField(
            model_name='junct_rate_ccpick',
            name='ratingUser_Ccpick',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratingUser_Ccpick', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='junct_phylumtag_note',
            name='note_phylum_tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note_phylum_tag', to='content_phylums.Phylum_Tag'),
        ),
        migrations.AddField(
            model_name='junct_phylumtag_note',
            name='tagged_note',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_note', to='content_phylums.Note'),
        ),
        migrations.AddField(
            model_name='junct_phylumtag_groupdeck',
            name='groupdeck_phylum_tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groupdeck_phylum_tag', to='content_phylums.Phylum_Tag'),
        ),
        migrations.AddField(
            model_name='junct_phylumtag_groupdeck',
            name='tagged_groupdeck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_groupdeck', to='content_phylums.Groupdeck'),
        ),
        migrations.AddField(
            model_name='junct_phylumtag_format',
            name='format_phylum_tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='format_phylum_tag', to='content_phylums.Phylum_Tag'),
        ),
        migrations.AddField(
            model_name='junct_phylumtag_format',
            name='tagged_format',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_format', to='content_phylums.Format'),
        ),
        migrations.AddField(
            model_name='junct_phylumtag_deck',
            name='deck_phylum_tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deck_phylum_tag', to='content_phylums.Phylum_Tag'),
        ),
        migrations.AddField(
            model_name='junct_phylumtag_deck',
            name='tagged_deck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_deck', to='content_phylums.Deck'),
        ),
        migrations.AddField(
            model_name='junct_phylumtag_ccpick',
            name='ccpick_phylum_tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ccpick_phylum_tag', to='content_phylums.Phylum_Tag'),
        ),
        migrations.AddField(
            model_name='junct_phylumtag_ccpick',
            name='tagged_ccpick',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_ccpick', to='content_phylums.Ccpick'),
        ),
        migrations.AddField(
            model_name='junct_img_note',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='note_img', to='content_phylums.Note'),
        ),
        migrations.AddField(
            model_name='junct_img_ccpick',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ccpick_img', to='content_phylums.Ccpick'),
        ),
        migrations.AddField(
            model_name='groupdeck',
            name='format_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='format_groupdeck', to='content_phylums.Format'),
        ),
        migrations.AddField(
            model_name='groupdeck',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groupdeck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupdeck',
            name='phylum_tags',
            field=models.ManyToManyField(blank=True, related_name='groupdecks_phylum_tags', through='content_phylums.Junct_PhylumTag_Groupdeck', to='content_phylums.Phylum_Tag'),
        ),
        migrations.AddField(
            model_name='groupdeck',
            name='ratings',
            field=models.ManyToManyField(blank=True, related_name='groupdeck_ratings', through='content_phylums.Junct_Rate_Groupdeck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupdeck',
            name='subscribers',
            field=models.ManyToManyField(blank=True, related_name='groupdeck_subscriptions', through='content_phylums.Junct_Sub_Groupdeck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='format',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_format', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='format',
            name='phylum_tags',
            field=models.ManyToManyField(blank=True, related_name='formats_phylum_tags', through='content_phylums.Junct_PhylumTag_Format', to='content_phylums.Phylum_Tag'),
        ),
        migrations.AddField(
            model_name='format',
            name='ratings',
            field=models.ManyToManyField(blank=True, related_name='format_ratings', through='content_phylums.Junct_Rate_Format', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='deck',
            name='format_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='format_deck', to='content_phylums.Format'),
        ),
        migrations.AddField(
            model_name='deck',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_deck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='deck',
            name='phylum_tags',
            field=models.ManyToManyField(blank=True, related_name='decks_phylum_tags', through='content_phylums.Junct_PhylumTag_Deck', to='content_phylums.Phylum_Tag'),
        ),
        migrations.AddField(
            model_name='deck',
            name='ratings',
            field=models.ManyToManyField(blank=True, related_name='deck_ratings', through='content_phylums.Junct_Rate_Deck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='deck',
            name='subscribers',
            field=models.ManyToManyField(blank=True, related_name='deck_subscriptions', through='content_phylums.Junct_Sub_Deck', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ccpick',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_ccpick', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ccpick',
            name='phylum_tags',
            field=models.ManyToManyField(blank=True, related_name='ccpicks_phylum_tags', through='content_phylums.Junct_PhylumTag_Ccpick', to='content_phylums.Phylum_Tag'),
        ),
        migrations.AddField(
            model_name='ccpick',
            name='ratings',
            field=models.ManyToManyField(blank=True, related_name='ccpick_ratings', through='content_phylums.Junct_Rate_Ccpick', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='junct_sub_note',
            unique_together={('subbingUser_Note', 'subbedNote')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_sub_groupdeck',
            unique_together={('subbingUser_Groupdeck', 'subbedGroupdeck')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_sub_deck',
            unique_together={('subbingUser_Deck', 'subbedDeck')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_rev_note',
            unique_together={('reviewingUser_Note', 'reviewedNote')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_rev_groupdeck',
            unique_together={('reviewingUser_Groupdeck', 'reviewedGroupdeck')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_rev_deck',
            unique_together={('reviewingUser_Deck', 'reviewedDeck')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_rate_note',
            unique_together={('ratingUser_Note', 'ratedNote')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_rate_groupdeck',
            unique_together={('ratingUser_Groupdeck', 'ratedGroupdeck')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_rate_format',
            unique_together={('ratingUser_Format', 'ratedFormat')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_rate_deck',
            unique_together={('ratingUser_Deck', 'ratedDeck')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_rate_ccpick',
            unique_together={('ratingUser_Ccpick', 'ratedCcpick')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_phylumtag_note',
            unique_together={('note_phylum_tag', 'tagged_note')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_phylumtag_groupdeck',
            unique_together={('groupdeck_phylum_tag', 'tagged_groupdeck')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_phylumtag_format',
            unique_together={('format_phylum_tag', 'tagged_format')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_phylumtag_deck',
            unique_together={('tagged_deck', 'deck_phylum_tag')},
        ),
        migrations.AlterUniqueTogether(
            name='junct_phylumtag_ccpick',
            unique_together={('tagged_ccpick', 'ccpick_phylum_tag')},
        ),
    ]
